name: C/C++ CI

# Triggered every time something is pushed to the master and also when creating a pull request into the master
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    # just making this path as variable accessible
    env:
      working-dir: ./iva/ivaApp 

    # the build server's operating system
    runs-on: ubuntu-latest

    steps:
      # Checking out our iva repo into the folder "iva"
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: iva
      
      # Checking out openFrameworks with submodules into the folder "ofx"
      - name: Checkout openFrameworks
        uses: actions/checkout@v2
        with:
          repository:  openframeworks/openFrameworks
          path: ofx
          submodules: true
      
      # Addons: Checking out additional addons into the correct openFrameworks directory
      - name: Checkout ofxCv addon
        uses: actions/checkout@v2
        with:
          repository:  kylemcdonald/ofxCv
          path: ofx/addons/ofxCv
      - name: Checkout ofxMidi addon
        uses: actions/checkout@v2
        with:
          repository:  danomatika/ofxMidi
          path: ofx/addons/ofxMidi

      # The "show ..." steps are there solely for debugging
      # - name: Show dirs
      #   run: ls -la
      # - name: Show addon dirs
      #   run: ls -la ./ofx/addons/

      # To update this component is seemingly necessary in order to compile the project
      # - name: Update poco (component of ofx)
      #   run: bash ./ofx/scripts/apothecary/apothecary/apothecary -t linux64 update poco
      
      # The OS needs certain dependencies in order to be able to compile the project.
      - name: Install ofx dependencies
        run: sudo bash ./ofx/scripts/linux/ubuntu/install_dependencies.sh

      # Downloading additional libs for ofx
      - name: Download ofx libs
        run: bash ./ofx/scripts/linux/download_libs.sh

      # Build openFrameworks
      - name: Building openFrameworks
        run: bash ./ofx/scripts/linux/compileOF.sh

      # Building the project
      - name: Building IVA
        run: |
          export OF_ROOT=${{ github.workspace }}/ofx
          cd ./iva/ivaApp
          make -f Makefile.github-action
        # working-directory: ${{env.working-dir}}

#    - name: configure
#      run: ./configure
#    - name: make check
#      run: make check
#    - name: make distcheck
#      run: make distcheck
